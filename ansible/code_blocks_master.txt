# Button 1: set up

r = ansible_runner.run(playbook = 'config_hardware.yml', forks=10, status_handler = my_status_handler)
r = ansible_runner.run(playbook = 'install_software.yml', forks = 10, status_handler = my_status_handler)
r = ansible_runner.run(playbook = 'sync_time.yml', forks = 10, status_handler = my_status_handler)
r = ansible_runner.run(playbook = 'reboot.yml', forks = 10, cmdline = '-- tags reboot', status_handler = my_status_handler)
r = ansible_runner.run(playbook = 'synch_code.yml', forks = 10, status_handler = my_status_handler)

# Button 2: copy latest Python files
r = ansible_runner.run(playbook = 'sync_code.yml', forks = 10, status_handler = my_status_handler)

# Button 3: synchronise clocks for experiment
r = ansible_runner.run(playbook = 'sync_time.yml', forks = 10, cmdline = '--tags experiment', status_handler = my_status_handler)

# Status handler - only need to define this once somwhere in the .py script
# To be developed further for actual status handling (it is called whenever the runner object changes state)
def my_status_handler(data):
	print(data)
